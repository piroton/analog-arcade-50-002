module led_manager #(ROW=10, COL=1)(
    input clk,  // clock
    input rst,  // reset
    input leftstack[10],
    input middlestack[10],
    input rightstack[10],
    output led_output0[ROW][COL][2],
    output led_output1[ROW][COL][2],
    output led_output2[ROW][COL][2]
  ) {

  always {
    // Purpose: link leftstack, middlestack and rightstack to led_output
    // array according to their respective columns and rows.
    // 
    // -------- led output --------
        // leftstack column 1
        led_output0[0][0][1] = leftstack[0];
        led_output0[1][0][1] = leftstack[1];
        led_output0[2][0][1] = leftstack[2];
        led_output0[3][0][1] = leftstack[3];
        led_output0[4][0][1] = leftstack[4];
        led_output0[5][0][1] = leftstack[5];
        led_output0[6][0][1] = leftstack[6];
        led_output0[7][0][1] = leftstack[7];
        led_output0[8][0][1] = leftstack[8];
        led_output0[9][0][1] = leftstack[9];
        // middlesck column 3
        led_output1[0][0][1] = middlestack[0];
        led_output1[1][0][1] = middlestack[1];
        led_output1[2][0][1] = middlestack[2];
        led_output1[3][0][1] = middlestack[3];
        led_output1[4][0][1] = middlestack[4];
        led_output1[5][0][1] = middlestack[5];
        led_output1[6][0][1] = middlestack[6];
        led_output1[7][0][1] = middlestack[7];
        led_output1[8][0][1] = middlestack[8];
        led_output1[9][0][1] = middlestack[9];
        // rightstack column 3
        led_output2[0][0][1] = rightstack[0];
        led_output2[1][0][1] = rightstack[1];
        led_output2[2][0][1] = rightstack[2];
        led_output2[3][0][1] = rightstack[3];
        led_output2[4][0][1] = rightstack[4];
        led_output2[5][0][1] = rightstack[5];
        led_output2[6][0][1] = rightstack[6];
        led_output2[7][0][1] = rightstack[7];
        led_output2[8][0][1] = rightstack[8];
        led_output2[9][0][1] = rightstack[9];
  }
}
