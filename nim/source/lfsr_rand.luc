module lfsr_rand (
    input clk,  // clock
    input rst,  // reset
    // Init output for lfsr_rand
    output out[10]
  ) {
  sig mid43;
  sig mid32;
  sig newnum[4];
  
.clk(clk){
  .rst(rst){
    dff curr_num[4](#INIT(4b1111));
    }
  }
  always {
    mid43 = curr_num.q[3] ^ curr_num.q[2];
    mid32 = mid43 ^ curr_num.q[1];
    newnum = curr_num.q + mid32;
    if (newnum < 4){
    out = 10b1111111111;
      } else if (newnum < 7){
    out = 10b0111111111;
      } else if (newnum < 10){
    out = 10b0011111111;
      } else if (newnum < 13){
    out = 10b0001111111;
    } else{
    out = 10b0000111111;
    }
    curr_num.d = newnum;
  }
}
